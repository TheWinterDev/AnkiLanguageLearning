
create_audio_files("Noun")
create_anki_file("Noun")


word_type = "Noun"
with open("Data/Input/Words/" + str(word_type) + ".txt", mode="r", encoding='utf8') as file:
     for word in file.read().splitlines():
         print(word)

site_soup = verbType.get_site_soup("haver")

irregular_list = site_soup.find("irreg").contents
if irregular_list[0] != "exemplo":
    exit()

print(verbType.get_translation(site_soup))

# INDICATIVO
print("INDICATIVO:\n" + yaml.dump(verbType.get_modo_indicativo(site_soup),
                                   default_flow_style=False, allow_unicode=True, sort_keys=False))

# CONJUNTIVO
print("CONJUNTIVO:\n" + yaml.dump(verbType.get_modo_conjuntivo(site_soup),
                                   default_flow_style=False, allow_unicode=True, sort_keys=False))

# IMPERATIVO
print("IMPERATIVO:\n" + yaml.dump(verbType.get_modo_imperativo(site_soup),
                                   default_flow_style=False, allow_unicode=True, sort_keys=False))

# INFINITIVO PESSOAL
print("INFINITIVO PESSOAL:\n" + yaml.dump(verbType.get_modo_infinitivo_pessoal(site_soup),
                                   default_flow_style=False, allow_unicode=True, sort_keys=False))

search_word = "conhecimento".lower()
url = "https://www.linguee.com/english-portuguese/search?source=portuguese&query=" + str(search_word)
page = requests.get(url)
site_soup = BeautifulSoup(page.content, "html.parser")

example_lines = site_soup.find_all(class_="example_lines")
examples_result_set = BeautifulSoup(str(example_lines), "html.parser").find_all(class_="tag_s")

all_examples = []
for item in examples_result_set:
    filtered_text = re.search(r'\>([^)]+)\<', str(item)).group(1)
    all_examples.append(filtered_text)

print(all_examples)


------------


transl = translatepy.Translator()


def get_word_example(word):
    url = "https://www.linguee.com/english-portuguese/search?source=portuguese&query=" + str(word)
    page = requests.get(url)
    site_soup = BeautifulSoup(page.content, "html.parser")

    example_lines = site_soup.find_all(class_="example_lines")
    examples_result_set = BeautifulSoup(str(example_lines), "html.parser").find_all(class_="tag_s")

    all_examples = []

    count = 0
    end_amount = 3
    for item in examples_result_set:
        count += 1
        filtered_text = re.search(r'>([^)]+)<', str(item)).group(1)
        all_examples.append(filtered_text)

        if count == end_amount:
            break

    output = []

    for example in all_examples:
        translation = transl.translate(example, "English")
        output.append([example, translation.result])

    return output


search_word = "brincar".lower()
print("--- Search Word: \n" + search_word + "\n")

print("--- Examples :")
for example in get_word_example(search_word):
    print("En : " + example[0])
    print("Pt : " + example[1])
    print()


---------

def create_audio_files(word_type):
    words_file = "Data/Input/Words/" + str(word_type) + ".txt"
    sound_base_name = str(word_type).capitalize() + "SND"

    tts.convert_file(words_file, sound_base_name, "Data/Output/Audio/" + str(word_type))


def create_anki_file(word_type):
    words_file = "Data/Input/Words/" + str(word_type) + ".txt"
    meaning_file = "Data/Input/Meaning/" + str(word_type) + ".txt"
    sound_base_name = str(word_type) + "SND"

    definition.convert_file_into_anki_import(
        words_file,
        meaning_file,
        sound_base_name,
        "Data/Output/Anki/" + str(word_type) + "Import.txt",
        str(word_type).lower()
    )
